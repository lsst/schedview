name: Build and Publish PyPI

on:
  push:
    tags:
      - "*"

jobs:
  tests:
    name: Check Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channels: conda-forge,defaults
          miniforge-variant: Mambaforge
          use-mamba: true
          channel-priority: strict
          show-channel-urls: true

      - name: configure conda and install requirements
        shell: bash -l {0}
        run: |
          mamba config --set always_yes yes
          mamba install --quiet --file=requirements.txt
          mamba install --quiet --file=test-requirements.txt

      - name: download rubin_sim_data components needed for unit tests
        shell: bash -l {0}
        run: |
          export RUBIN_SIM_DATA_DIR=${{ github.workspace }}/data_dir
          mkdir $RUBIN_SIM_DATA_DIR
          cd $RUBIN_SIM_DATA_DIR
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/tests_2022_10_18.tgz
          tar -xf tests_2022_10_18.tgz
          echo "tests_2022_10_18.tgz complete"
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/throughputs_2023_09_07.tgz
          tar -xf throughputs_2023_09_07.tgz
          echo "throughputs_2023_09_07.tgz complete"
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/maps_2022_2_28.tgz
          tar -xf maps_2022_2_28.tgz
          echo "maps_2022_2_28.tgz complete"
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/site_models_2023_03_28.tgz
          tar -xf site_models_2023_03_28.tgz
          echo "site_models_2023_03_28.tgz complete"
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/scheduler_2023_03_09.tgz
          tar -xf scheduler_2023_03_09.tgz
          echo "scheduler_2023_03_09.tgz complete"
          wget -q https://s3df.slac.stanford.edu/data/rubin/sim-data/rubin_sim_data/skybrightness_pre_2023_09_19.tgz
          tar -xf skybrightness_pre_2023_09_19.tgz
          echo "skybrightness_pre_2023_09_19.tgz complete"

      - name: install schedview
        shell: bash -l {0}
        run: |
          echo `pwd`
          python -m pip install .

      - name: conda list
        shell: bash -l {0}
        run: conda list

      - name: run unit tests
        shell: bash -l {0}
        run: |
          export RUBIN_SIM_DATA_DIR=${{ github.workspace }}/data_dir
          pytest -r a -v --cov=schedview --cov=tests --cov-report=xml --cov-report=term --cov-branch

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          file: coverage.xml

  pypi:
    name: Build and upload to PyPI
    runs-on: ubuntu-latest
    needs: [tests]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4
        with:
          # Need to clone everything to embed the version.
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools build

      - name: Build and create distribution
        run: |
          python -m build --skip-dependency-check

      - name: Upload to lsst-sp PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.SP_PYPI_UPLOADS }}
