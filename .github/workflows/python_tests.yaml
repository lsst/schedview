name: Run Unit Tests

on:
  # Trigger the workflow on pull request to main, or by hand
  # Trigger the workflow on push (to main) or pull request
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Tests:
    name: Run Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channels: conda-forge,defaults
          miniforge-variant: Mambaforge
          use-mamba: true
          channel-priority: strict
          show-channel-urls: true

      - name: configure conda and install requirements
        shell: bash -l {0}
        run: |
          mamba config --set always_yes yes
          mamba install --quiet --file=requirements.txt
          mamba install --quiet --file=test-requirements.txt

      - name: download rubin_sim_data components needed for unit tests
        shell: bash -l {0}
        run: |
          export RUBIN_SIM_DATA_DIR=${{ github.workspace }}/data_dir
          rs_download_data --force --tdqm_disable --dirs tests,skybrightness_pre

      - name: install schedview
        shell: bash -l {0}
        run: |
          echo `pwd`
          python -m pip install .

      - name: conda list
        shell: bash -l {0}
        run: conda list

      - name: run unit tests
        shell: bash -l {0}
        run: |
          pytest -r a -v --cov=schedview --cov=tests --cov-report=xml --cov-report=term --cov-branch

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          file: coverage.xml
